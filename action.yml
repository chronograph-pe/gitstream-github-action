name: 'GitStream CMR'
description: 'Public github action for GitStream continuous merge platform'

inputs:
  full_repository:
    description: 'Path of full Repository'
    required: true
  head_ref:
    description: 'Head Branch Ref to checkout to'
    required: true
  base_ref:
    description: 'Base Branch Ref to checkout to'
    required: true
  client_payload:
    description: 'The client payload'
    required: true
  installation_id:
    description: 'The github app installation id'
    required: false
  resolver_url:
    description: 'Resolver url to send results to'
    required: true
  resolver_token:
    description: 'Optional token for resolver'
    required: false
  debug_mode:
    description: 'Run parser in debug mode'
    required: false
    default: false

runs:
  using: 'composite'
  steps:
    - name: Set start time
      id: start
      run: |
        printf '::set-output name=timestamp::%(%s)T\n'
      shell: bash
    - name: Create GitStream folder
      id: create-gitstream-folder
      shell: bash
      run: |
        mkdir gitstream
    - name: Checkout head branch
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.full_repository }}
        ref: ${{ github.event.inputs.head_ref }}
        path: 'gitstream/'
    - run: |
        cd gitstream
        git fetch --deepen=1000 origin ${{ github.event.inputs.base_ref }}
        git checkout -b ${{ github.event.inputs.base_ref }} origin/${{ github.event.inputs.base_ref }}
        git checkout ${{ github.event.inputs.head_ref }}
        git fetch --deepen=1000 origin ${{ github.event.inputs.head_ref }}
      shell: bash
    - name: Run The Action
      if: always()
      run: |
        SECONDS=0
        docker pull gitstream/rules-engine:latest
        DOCKER_PULL_DURATION=$SECONDS
        SECONDS=0
        docker run -v $(pwd)/gitstream:/code -e HEAD_REF=${{ github.event.inputs.head_ref }} -e BASE_REF=${{ github.event.inputs.base_ref }} -e CLIENT_PAYLOAD=${{ github.event.inputs.client_payload }} -e RULES_RESOLVER_URL=${{ github.event.inputs.resolver_url }} -e RULES_RESOLVER_TOKEN=${{ github.event.inputs.resolver_token }} -e DEBUG_MODE=${{ github.event.inputs.debug_mode }} gitstream/rules-engine
        DOCKER_RUN_DURATION=$SECONDS
        ACTION_RUN_DURATION=$((now - ${{ steps.start.outputs.timestamp }}))
        curl --location --request POST 'https://shaked.ngrok.io/analytics' \
        --header 'Content-Type: application/json' \
        --data-raw '{
            "type": "runtimeMetric",
            "reporter": "gitstream-github-action",
            "dockerPullDuration": \"$DOCKER_PULL_DURATION\",
            "dockerRunDuration": \"$DOCKER_RUN_DURATION\",
            "actionRunDuration": \"$ACTION_RUN_DURATION\",
            "client_payload": \"${{ github.event.inputs.client_payload }}\"
        }'
      shell: bash
