name: 'Escape Single Quotes'
description: 'Escape single quotes in given strings'
inputs:
  BASE_REF_ARG:
    description: 'Base Ref Argument'
    required: true
  HEAD_REF_ARG:
    description: 'Head Ref Argument'
    required: true
  PAYLOAD_ARG:
    description: 'Client Payload Argument'
    required: true
  URL_ARG:
    description: 'URL Argument'
    required: true
outputs:
  base_ref:
    description: 'Escaped Base Ref'
  head_ref:
    description: 'Escaped Head Ref'
  url:
    description: 'Safe URL'
  client_payload:
    description: 'Safe Client Payload'
runs:
  using: 'composite'
  steps:
    - run: |
        function escapeApostrophe() {
          echo "$1" | sed "s/'/'\\\\''/g"
        }
        function convertToSafeString() {
          echo "$1" | sed 's/['\''`]/\\&/g'
        }
        echo "BASE_REF=$(escapeApostrophe "${{ inputs.BASE_REF_ARG }}")" >> $GITHUB_ENV
        echo "HEAD_REF=$(escapeApostrophe "${{ inputs.HEAD_REF_ARG }}")" >> $GITHUB_ENV
        echo "URL=$(convertToSafeString "${{ inputs.URL_ARG }}")" >> $GITHUB_ENV
        echo "CLIENT_PAYLOAD=$(convertToSafeString "${{ inputs.PAYLOAD_ARG }}")" >> $GITHUB_ENV
        echo "::set-output name=base_ref::$(escapeApostrophe "${{ inputs.BASE_REF_ARG }}")"
        echo "::set-output name=head_ref::$(escapeApostrophe "${{ inputs.HEAD_REF_ARG }}")"
        echo "::set-output name=url::$(convertToSafeString "${{ inputs.URL_ARG }}")"
        echo "::set-output name=client_payload::$(convertToSafeString "${{ inputs.PAYLOAD_ARG }}")"
      shell: bash
